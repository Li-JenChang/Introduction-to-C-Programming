#include <stdio.h>
#include <stdlib.h>
#include <string.h>

typedef struct {
    int x;
    int y;
    double speed;
} Car;

int cmp(const void * a, const void * b);

void showcar(Car * pc)
{
    printf("%3d %3d %10lf\n", pc->x, pc->y, pc->speed);   // (*pc).speed 等同 pc->speed
}

int main(void)
{
    int i;
    Car * cars;
    Car * ptrs[100];

    cars = (Car *) malloc(100 * sizeof(Car));
    for (i = 0; i < 100; i++) {
        cars[i].x = rand() % 1000;
        cars[i].y = rand() % 1000;
        cars[i].speed = 300 * (double) rand() / RAND_MAX;
    }
    for (i = 0; i < 100; i++) {
        ptrs[i] = &cars[i];     // 為了不去改動原本 cars 的內容
    }

    printf("Before sorting: \n");
    for (i = 0; i < 100; i++) {
        showcar(ptrs[i]);       // 傳記憶體位置(避免一直重複傳 struct 的內容)
    }
    
    qsort(ptrs, 100, sizeof(Car *), cmp);
    
    printf("After sorting: \n");
    for (i = 0; i < 100; i++) {
        showcar(ptrs[i]);
    }
    printf("cars: \n");
    for (i = 0; i < 100; i++) {
        showcar(&cars[i]);
    }

    free(cars);

    return 0;
}

int cmp(const void * a, const void * b)
{
    Car ** pa = (Car **) a;
    Car ** pb = (Car **) b;
    if ((*pa)->speed > (*pb)->speed) return 1;
    else if ((*pa)->speed < (*pb)->speed) return -1;
    else return 0;
}
