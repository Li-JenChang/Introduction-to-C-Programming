#include <stdio.h>
#include <stdlib.h>
#include <string.h>

typedef struct _Node {
    int data;
    struct _Node * next;
} Node;

Node * Create_List(Node * head, int num);
Node * Reverse_List(Node * head);
void Print_List(Node * head);
void Free_List(Node * head);

int main(void)
{
    Node * head = NULL;
    int n, data, i;

    scanf("%d", &n);
    for (i = 0; i < n; i++) {
        scanf("%d", &data);
        head = Create_List(head, data);
    }

    head = Reverse_List(head);

    Print_List(head);
    Free_List(head);

    return 0;
}

Node * Create_List(Node * head, int num)
{
    Node * p = (Node *) malloc(sizeof(Node));
    Node * temp = head;
    p->data = num;
    p->next = NULL;
    if (head == NULL) head = p;
    else {
        while (temp->next != NULL) {
            temp = temp->next;
        }
        temp->next = p;
    }
    return head;
}

Node * Reverse_List(Node * head)
{
    Node * current = head;
    Node * prev = NULL, * next = NULL;
    while (current != NULL) {
        next = current->next;     // store next
        current->next = prev;     // reverse direction
        prev = current;           // move pointer one position ahead
        current = next;
    }
    head = prev;
    return head;
}

void Print_List(Node * head)
{
    while (head != NULL) {
        printf("%d", head->data);
        if (head->next != NULL)
            printf("->");
        head = head->next;
    }
    printf("\n");
}

void Free_List(Node * head)
{
    Node * temp;
    if (head != NULL) {
        while (head != NULL) {
            temp = head;
            head = head->next;
            free(temp);
        }
    }
}
